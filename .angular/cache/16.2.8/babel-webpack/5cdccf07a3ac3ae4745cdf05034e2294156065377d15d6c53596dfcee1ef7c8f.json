{"ast":null,"code":"import { inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { HeaderComponent } from 'src/app/core/components/header/header.component';\nimport { BannerComponent } from 'src/app/core/components/banner/banner.component';\nimport { MovieService } from 'src/app/shared/services/movie.service';\nimport { MovieCarouselComponent } from 'src/app/shared/components/movie-carousel/movie-carousel.component';\nimport { Observable, forkJoin, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nexport let BrowseComponent = /*#__PURE__*/(() => {\n  class BrowseComponent {\n    constructor() {\n      this.auth = inject(AuthService);\n      this.movieService = inject(MovieService);\n      this.name = JSON.parse(sessionStorage.getItem(\"loggedInUser\")).name;\n      this.userProfileImg = JSON.parse(sessionStorage.getItem(\"loggedInUser\")).picture;\n      this.email = JSON.parse(sessionStorage.getItem(\"loggedInUser\")).email;\n      this.bannerDetail$ = new Observable();\n      this.bannerVideo$ = new Observable();\n      this.movies = [];\n      this.tvShows = [];\n      // ratedMovies: IVideoContent[] = [];\n      this.nowPlayingMovies = [];\n      this.popularMovies = [];\n      this.topRatedMovies = [];\n      this.upcomingMovies = [];\n      this.sources = [this.movieService.getMovies(), this.movieService.getTvShows(),\n      // this.movieService.getRatedMovies(),\n      this.movieService.getNowPlayingMovies(), this.movieService.getUpcomingMovies(), this.movieService.getPopularMovies(), this.movieService.getTopRated()];\n    }\n    ngOnInit() {\n      forkJoin(this.sources).pipe(map(([movies, tvShows, nowPlaying, upcoming, popular, topRated]) => {\n        this.bannerDetail$ = this.movieService.getBannerDetail(movies.results[1].id);\n        this.bannerVideo$ = this.movieService.getBannerVideo(movies.results[1].id);\n        return {\n          movies,\n          tvShows,\n          nowPlaying,\n          upcoming,\n          popular,\n          topRated\n        };\n      })).subscribe(res => {\n        this.movies = res.movies.results;\n        this.tvShows = res.tvShows.results;\n        // this.ratedMovies = res.ratedMovies.results as IVideoContent[];\n        this.nowPlayingMovies = res.nowPlaying.results;\n        this.upcomingMovies = res.upcoming.results;\n        this.popularMovies = res.popular.results;\n        this.topRatedMovies = res.topRated.results;\n        this.getMovieKey();\n      });\n    }\n    getMovieKey() {\n      this.movieService.getBannerVideo(this.movies[0].id).subscribe(res => {\n        console.log(res);\n      });\n    }\n    singOut() {\n      sessionStorage.removeItem(\"loggedInUser\");\n      this.auth.signOut();\n    }\n    static #_ = this.ɵfac = function BrowseComponent_Factory(t) {\n      return new (t || BrowseComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: BrowseComponent,\n      selectors: [[\"app-browse\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 10,\n      vars: 20,\n      consts: [[3, \"userImg\"], [3, \"bannerTitle\", \"bannerOverview\", \"key\"], [3, \"title\", \"videoContents\"]],\n      template: function BrowseComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-header\", 0)(1, \"app-banner\", 1);\n          i0.ɵɵpipe(2, \"async\");\n          i0.ɵɵpipe(3, \"async\");\n          i0.ɵɵpipe(4, \"async\");\n          i0.ɵɵelement(5, \"app-movie-carousel\", 2)(6, \"app-movie-carousel\", 2)(7, \"app-movie-carousel\", 2)(8, \"app-movie-carousel\", 2)(9, \"app-movie-carousel\", 2);\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          i0.ɵɵproperty(\"userImg\", ctx.userProfileImg);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"bannerTitle\", (tmp_1_0 = i0.ɵɵpipeBind1(2, 14, ctx.bannerDetail$)) == null ? null : tmp_1_0.original_title)(\"bannerOverview\", (tmp_2_0 = i0.ɵɵpipeBind1(3, 16, ctx.bannerDetail$)) == null ? null : tmp_2_0.overview)(\"key\", (tmp_3_0 = i0.ɵɵpipeBind1(4, 18, ctx.bannerVideo$)) == null ? null : tmp_3_0.results[0].key);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"title\", \"Popular on Netflix\")(\"videoContents\", ctx.movies);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"title\", \"Trending TV shows\")(\"videoContents\", ctx.tvShows);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"title\", \"Now Playing Movies\")(\"videoContents\", ctx.nowPlayingMovies);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"title\", \"Popular Movies\")(\"videoContents\", ctx.popularMovies);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"title\", \"Upcoming Movies\")(\"videoContents\", ctx.upcomingMovies);\n        }\n      },\n      dependencies: [CommonModule, i1.AsyncPipe, HeaderComponent, BannerComponent, MovieCarouselComponent]\n    });\n  }\n  return BrowseComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}