{"ast":null,"code":"import { inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { HeaderComponent } from 'src/app/core/components/header/header.component';\nimport { BannerComponent } from 'src/app/core/components/banner/banner.component';\nimport { MovieService } from 'src/app/shared/services/movie.service';\nimport { MovieCarouselComponent } from 'src/app/shared/components/movie-carousel/movie-carousel.component';\nimport { Observable, forkJoin, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nexport class BrowseComponent {\n  constructor() {\n    this.auth = inject(AuthService);\n    this.movieService = inject(MovieService);\n    this.name = JSON.parse(sessionStorage.getItem(\"loggedInUser\")).name;\n    this.userProfileImg = JSON.parse(sessionStorage.getItem(\"loggedInUser\")).picture;\n    this.email = JSON.parse(sessionStorage.getItem(\"loggedInUser\")).email;\n    this.bannerDetail$ = new Observable();\n    this.bannerVideo$ = new Observable();\n    this.movies = [];\n    this.tvShows = [];\n    // ratedMovies: IVideoContent[] = [];\n    this.nowPlayingMovies = [];\n    this.popularMovies = [];\n    this.topRatedMovies = [];\n    this.upcomingMovies = [];\n    this.sources = [this.movieService.getMovies(), this.movieService.getTvShows(),\n    //   // this.movieService.getRatedMovies(),\n    this.movieService.getNowPlayingMovies(), this.movieService.getUpcomingMovies(), this.movieService.getPopularMovies(), this.movieService.getTopRated()];\n    this.source = [this.movieService.getMovies()];\n  }\n  ngOnInit() {\n    forkJoin(this.sources).pipe(map(([movies, tvShows, nowPlaying, upcoming, popular, topRated]) => {\n      this.bannerDetail$ = this.movieService.getBannerDetail(movies.results[1].id);\n      this.bannerVideo$ = this.movieService.getBannerVideo(movies.results[1].id);\n      return {\n        movies,\n        tvShows,\n        nowPlaying,\n        upcoming,\n        popular,\n        topRated\n      };\n    })).subscribe(res => this.movies = res.movies.results);\n    this.tvShows = res.tvShows.results;\n    // this.ratedMovies = res.ratedMovies.results as IVideoContent[];\n    this.nowPlayingMovies = res.nowPlaying.results;\n    this.upcomingMovies = res.upcoming.results;\n    this.popularMovies = res.popular.results;\n    this.topRatedMovies = res.topRated.results;\n    this.getMovieKey();\n  }\n  static #_ = this.ɵfac = function BrowseComponent_Factory(t) {\n    return new (t || BrowseComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BrowseComponent,\n    selectors: [[\"app-browse\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 10,\n    vars: 20,\n    consts: [[3, \"userImg\"], [3, \"bannerTitle\", \"bannerOverview\", \"key\"], [3, \"title\", \"videoContents\"]],\n    template: function BrowseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-header\", 0)(1, \"app-banner\", 1);\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵpipe(3, \"async\");\n        i0.ɵɵpipe(4, \"async\");\n        i0.ɵɵelement(5, \"app-movie-carousel\", 2)(6, \"app-movie-carousel\", 2)(7, \"app-movie-carousel\", 2)(8, \"app-movie-carousel\", 2)(9, \"app-movie-carousel\", 2);\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_3_0;\n        i0.ɵɵproperty(\"userImg\", ctx.userProfileImg);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"bannerTitle\", (tmp_1_0 = i0.ɵɵpipeBind1(2, 14, ctx.bannerDetail$)) == null ? null : tmp_1_0.original_title)(\"bannerOverview\", (tmp_2_0 = i0.ɵɵpipeBind1(3, 16, ctx.bannerDetail$)) == null ? null : tmp_2_0.overview)(\"key\", (tmp_3_0 = i0.ɵɵpipeBind1(4, 18, ctx.bannerVideo$)) == null ? null : tmp_3_0.results[0].key);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"title\", \"Popular on Netflix\")(\"videoContents\", ctx.movies);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"title\", \"Trending TV shows\")(\"videoContents\", ctx.tvShows);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"title\", \"Now Playing Movies\")(\"videoContents\", ctx.nowPlayingMovies);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"title\", \"Popular Movies\")(\"videoContents\", ctx.popularMovies);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"title\", \"Upcoming Movies\")(\"videoContents\", ctx.upcomingMovies);\n      }\n    },\n    dependencies: [CommonModule, i1.AsyncPipe, HeaderComponent, BannerComponent, MovieCarouselComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\ngetMovieKey();\n{\n  this.movieService.getBannerVideo(this.movies[0].id).subscribe(res => {\n    console.log(res);\n  });\n}\nsingOut();\n{\n  sessionStorage.removeItem(\"loggedInUser\");\n  this.auth.signOut();\n}","map":{"version":3,"names":["inject","CommonModule","AuthService","HeaderComponent","BannerComponent","MovieService","MovieCarouselComponent","Observable","forkJoin","map","BrowseComponent","constructor","auth","movieService","name","JSON","parse","sessionStorage","getItem","userProfileImg","picture","email","bannerDetail$","bannerVideo$","movies","tvShows","nowPlayingMovies","popularMovies","topRatedMovies","upcomingMovies","sources","getMovies","getTvShows","getNowPlayingMovies","getUpcomingMovies","getPopularMovies","getTopRated","source","ngOnInit","pipe","nowPlaying","upcoming","popular","topRated","getBannerDetail","results","id","getBannerVideo","subscribe","res","getMovieKey","_","_2","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","BrowseComponent_Template","rf","ctx","ɵɵelement","ɵɵproperty","ɵɵadvance","tmp_1_0","ɵɵpipeBind1","original_title","tmp_2_0","overview","tmp_3_0","key","i1","AsyncPipe","styles","console","log","singOut","removeItem","signOut"],"sources":["C:\\Users\\DELL\\Downloads\\Shikha-movie-app-angular\\movie-app-angular\\src\\app\\pages\\browse\\browse.component.ts","C:\\Users\\DELL\\Downloads\\Shikha-movie-app-angular\\movie-app-angular\\src\\app\\pages\\browse\\browse.component.html"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { HeaderComponent } from 'src/app/core/components/header/header.component';\nimport { BannerComponent } from 'src/app/core/components/banner/banner.component';\nimport { MovieService } from 'src/app/shared/services/movie.service';\nimport { MovieCarouselComponent } from 'src/app/shared/components/movie-carousel/movie-carousel.component';\nimport { IVideoContent } from 'src/app/shared/models/video-content.interface';\nimport { Observable, forkJoin, map, switchMap } from 'rxjs';\n\n@Component({\n  selector: 'app-browse',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent, BannerComponent, MovieCarouselComponent],\n  templateUrl: './browse.component.html',\n  styleUrls: ['./browse.component.scss']\n})\nexport class BrowseComponent implements OnInit {\n\n  auth = inject(AuthService);\n  movieService = inject(MovieService);\n  name = JSON.parse(sessionStorage.getItem(\"loggedInUser\")!).name;\n  userProfileImg = JSON.parse(sessionStorage.getItem(\"loggedInUser\")!).picture;\n  email = JSON.parse(sessionStorage.getItem(\"loggedInUser\")!).email;\n  bannerDetail$ = new Observable<any>();\n  bannerVideo$ = new Observable<any>();\n\n  movies: IVideoContent[] = [];\n  tvShows: IVideoContent[] = [];\n  // ratedMovies: IVideoContent[] = [];\n  nowPlayingMovies: IVideoContent[] = [];\n  popularMovies: IVideoContent[] = [];\n  topRatedMovies: IVideoContent[] = [];\n  upcomingMovies: IVideoContent[] = [];\n\n  sources = [\n    this.movieService.getMovies(),\n     this.movieService.getTvShows(),\n  //   // this.movieService.getRatedMovies(),\n     this.movieService.getNowPlayingMovies(),\n    this.movieService.getUpcomingMovies(),\n     this.movieService.getPopularMovies(),\n     this.movieService.getTopRated()\n\n     \n\n   ];\n\n   source = [\n    this.movieService.getMovies()\n   ]\n    \n   ngOnInit\n\n\n\n  ngOnInit(): void {\n    forkJoin(this.sources)\n    .pipe(\n      map(([movies, tvShows, nowPlaying, upcoming, popular, topRated])=>{\n        this.bannerDetail$ = this.movieService.getBannerDetail(movies.results[1].id);\n        this.bannerVideo$ = this.movieService.getBannerVideo(movies.results[1].id);\n        return {movies, tvShows, nowPlaying, upcoming, popular, topRated}\n      })\n    ).subscribe((res:any)=>\n      this.movies = res.movies.results as IVideoContent[];\n      this.tvShows = res.tvShows.results as IVideoContent[];\n      // this.ratedMovies = res.ratedMovies.results as IVideoContent[];\n      this.nowPlayingMovies = res.nowPlaying.results as IVideoContent[];\n      this.upcomingMovies = res.upcoming.results as IVideoContent[];\n      this.popularMovies = res.popular.results as IVideoContent[];\n      this.topRatedMovies = res.topRated.results as IVideoContent[];\n      this.getMovieKey();\n    })\n  }\n\n  getMovieKey() {\n    this.movieService.getBannerVideo(this.movies[0].id)\n    .subscribe(res=>{\n      console.log(res);\n    })\n  }\n\n  singOut() {\n    sessionStorage.removeItem(\"loggedInUser\");\n    this.auth.signOut();\n  }\n}\n","<app-header [userImg]=\"userProfileImg\" />\n<!-- component -->\n<app-banner [bannerTitle]=\"(bannerDetail$ | async)?.original_title\" [bannerOverview]=\"(bannerDetail$ | async)?.overview\"\n  [key]=\"(bannerVideo$ | async)?.results[0].key\" />\n<app-movie-carousel [title]=\"'Popular on Netflix'\" [videoContents]=\"movies\" />\n\n<app-movie-carousel [title]=\"'Trending TV shows'\" [videoContents]=\"tvShows\" />\n\n<app-movie-carousel [title]=\"'Now Playing Movies'\" [videoContents]=\"nowPlayingMovies\" />\n\n<app-movie-carousel [title]=\"'Popular Movies'\" [videoContents]=\"popularMovies\" />\n\n<!-- <app-movie-carousel [title]=\"'Top Rated Movies'\" [videoContents]=\"topRatedMovies\" />  -->\n\n<app-movie-carousel [title]=\"'Upcoming Movies'\" [videoContents]=\"upcomingMovies\" />\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}